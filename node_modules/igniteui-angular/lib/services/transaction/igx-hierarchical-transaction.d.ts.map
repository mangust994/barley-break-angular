{"version":3,"file":"igx-hierarchical-transaction.d.ts","sources":["igx-hierarchical-transaction.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { HierarchicalTransaction, HierarchicalState } from './transaction';\nimport { IgxTransactionService } from './igx-transaction';\nimport { HierarchicalTransactionService } from './hierarchical-transaction';\n/** @experimental @hidden */\nexport declare class IgxHierarchicalTransactionService<T extends HierarchicalTransaction, S extends HierarchicalState> extends IgxTransactionService<T, S> implements HierarchicalTransactionService<T, S> {\n    getAggregatedChanges(mergeChanges: boolean): T[];\n    commit(data: any[], primaryKeyOrId?: any, childDataKey?: any, id?: any): void;\n    protected updateState(states: Map<any, S>, transaction: T, recordRef?: any): void;\n    private clearArraysFromObject;\n}\n"]}