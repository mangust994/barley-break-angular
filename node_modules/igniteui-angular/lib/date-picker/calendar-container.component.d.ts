import { EventEmitter } from '@angular/core';
import { IgxCalendarComponent } from '../calendar/public_api';
import { InteractionMode } from '../core/enums';
import { IgxDatePickerActionsDirective } from './date-picker.directives';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxCalendarContainerComponent {
    calendar: IgxCalendarComponent;
    mode: InteractionMode;
    vertical: boolean;
    cancelButtonLabel: string;
    todayButtonLabel: string;
    datePickerActions: IgxDatePickerActionsDirective;
    onClose: EventEmitter<any>;
    onTodaySelection: EventEmitter<any>;
    styleClass: string;
    get dropdownCSS(): boolean;
    get verticalCSS(): boolean;
    onEscape(event: any): void;
    /**
     * Returns whether the date-picker is in readonly dialog mode.
     *
     * @hidden
     */
    get isReadonly(): boolean;
    /**
     * Emits close event for the calendar.
     */
    closeCalendar(): void;
    /**
     * Emits today selection event for the calendar.
     */
    triggerTodaySelection(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxCalendarContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxCalendarContainerComponent, "igx-calendar-container", never, { "mode": "mode"; "vertical": "vertical"; "cancelButtonLabel": "cancelButtonLabel"; "todayButtonLabel": "todayButtonLabel"; "datePickerActions": "datePickerActions"; }, { "onClose": "onClose"; "onTodaySelection": "onTodaySelection"; }, never, never>;
}

//# sourceMappingURL=calendar-container.component.d.ts.map