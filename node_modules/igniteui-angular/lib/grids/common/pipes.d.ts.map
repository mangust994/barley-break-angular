{"version":3,"file":"pipes.d.ts","sources":["pipes.d.ts"],"names":[],"mappingssourcesContent":["import { PipeTransform } from '@angular/core';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { GridType } from './grid.interface';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { ColumnDisplayOrder } from './enums';\nimport { IgxColumnActionsComponent } from '../column-actions/column-actions.component';\n/**\n * @hidden\n * @internal\n */\nexport declare class IgxGridCellStyleClassesPipe implements PipeTransform {\n    transform(cssClasses: {\n        [prop: string]: any;\n    }, _: any, data: any, field: string, index: number, __: number): string;\n}\n/**\n * @hidden\n * @internal\n */\nexport declare class IgxGridCellStylesPipe implements PipeTransform {\n    transform(styles: {\n        [prop: string]: any;\n    }, _: any, data: any, field: string, index: number, __: number): {\n        [prop: string]: any;\n    };\n}\n/**\n * @hidden\n * @internal\n */\nexport declare class IgxGridNotGroupedPipe implements PipeTransform {\n    transform(value: any[]): any[];\n}\n/**\n * @hidden\n * @internal\n */\nexport declare class IgxGridTopLevelColumns implements PipeTransform {\n    transform(value: any[]): any[];\n}\n/**\n * @hidden\n * @internal\n */\nexport declare class IgxGridFilterConditionPipe implements PipeTransform {\n    transform(value: string): string;\n}\n/**\n * @hidden\n * @internal\n */\nexport declare class IgxGridTransactionPipe implements PipeTransform {\n    private gridAPI;\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>);\n    transform(collection: any[], id: string, pipeTrigger: number): any[];\n}\n/**\n * @hidden\n * @internal\n */\nexport declare class IgxGridPaginatorOptionsPipe implements PipeTransform {\n    transform(values: Array<number>): number[];\n}\n/**\n * @hidden\n * @internal\n */\nexport declare class IgxHasVisibleColumnsPipe implements PipeTransform {\n    transform(values: any[], hasVisibleColumns: any): any[];\n}\n/**\n * @hidden\n */\nexport declare class IgxGridRowPinningPipe implements PipeTransform {\n    private gridAPI;\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>);\n    transform(collection: any[], id: string, isPinned: boolean, pipeTrigger: number): any[];\n}\nexport declare class IgxColumnActionEnabledPipe implements PipeTransform {\n    protected columnActions: IgxColumnActionsComponent;\n    constructor(columnActions: IgxColumnActionsComponent);\n    transform(collection: IgxColumnComponent[], actionFilter: (value: IgxColumnComponent, index: number, array: IgxColumnComponent[]) => boolean, pipeTrigger: number): IgxColumnComponent[];\n}\nexport declare class IgxFilterActionColumnsPipe implements PipeTransform {\n    protected columnActions: IgxColumnActionsComponent;\n    constructor(columnActions: IgxColumnActionsComponent);\n    transform(collection: IgxColumnComponent[], filterCriteria: string, pipeTrigger: number): IgxColumnComponent[];\n}\nexport declare class IgxSortActionColumnsPipe implements PipeTransform {\n    transform(collection: IgxColumnComponent[], displayOrder: ColumnDisplayOrder, pipeTrigger: number): IgxColumnComponent[];\n}\nexport declare class IgxGridDataMapperPipe implements PipeTransform {\n    transform(data: any[], field: string, _: number, val: any, isNestedPath: boolean): any;\n}\nexport declare class IgxStringReplacePipe implements PipeTransform {\n    transform(value: string, search: string | RegExp, replacement: string): string;\n}\nexport declare class IgxGridTransactionStatePipe implements PipeTransform {\n    transform(row_id: any, field: string, rowEditable: boolean, transactions: any, _: any, __: any, ___: any): any;\n}\nexport declare class IgxColumnFormatterPipe implements PipeTransform {\n    transform(value: any, formatter: (v: any) => any): any;\n}\nexport declare class IgxGridAddRowPipe implements PipeTransform {\n    private gridAPI;\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>);\n    transform(collection: any, isPinned: boolean, pipeTrigger: number): any;\n}\n"]}