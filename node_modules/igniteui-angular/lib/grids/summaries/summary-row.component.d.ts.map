{"version":3,"file":"summary-row.component.d.ts","sources":["summary-row.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { QueryList, ElementRef, ChangeDetectorRef, DoCheck } from '@angular/core';\nimport { IgxSummaryResult } from './grid-summary';\nimport { IgxSummaryCellComponent } from './summary-cell.component';\nimport { IgxGridForOfDirective } from '../../directives/for-of/for_of.directive';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { GridType } from '../common/grid.interface';\nexport declare class IgxSummaryRowComponent implements DoCheck {\n    gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>;\n    element: ElementRef;\n    cdr: ChangeDetectorRef;\n    summaries: Map<string, IgxSummaryResult[]>;\n    gridID: any;\n    index: number;\n    firstCellIndentation: number;\n    get dataRowIndex(): number;\n    get minHeight(): number;\n    _summaryCells: QueryList<IgxSummaryCellComponent>;\n    get summaryCells(): QueryList<IgxSummaryCellComponent>;\n    set summaryCells(cells: QueryList<IgxSummaryCellComponent>);\n    /**\n     * @hidden\n     */\n    virtDirRow: IgxGridForOfDirective<any>;\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>, element: ElementRef, cdr: ChangeDetectorRef);\n    ngDoCheck(): void;\n    get grid(): IgxGridBaseDirective & GridType;\n    get nativeElement(): any;\n    getColumnSummaries(columnName: any): IgxSummaryResult[];\n    /**\n     * @hidden\n     * @internal\n     */\n    isCellActive(visibleColumnIndex: any): boolean;\n    /**\n     * @hidden\n     */\n    get pinnedColumns(): IgxColumnComponent[];\n    /**\n     * @hidden\n     */\n    get unpinnedColumns(): IgxColumnComponent[];\n    getContext(row: any): {\n        $implicit: any;\n    };\n}\n"]}