import { PipeTransform } from '@angular/core';
import { GridBaseAPIService } from '../api.service';
import { IgxHierarchicalGridComponent } from './hierarchical-grid.component';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxGridHierarchicalPipe implements PipeTransform {
    private gridAPI;
    constructor(gridAPI: GridBaseAPIService<IgxHierarchicalGridComponent>);
    transform(collection: any, state: Map<any, boolean>, id: string, primaryKey: any, childKeys: string[], pipeTrigger: number): any[];
    addHierarchy<T>(grid: any, data: T[], state: any, primaryKey: any, childKeys: string[]): T[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridHierarchicalPipe, never>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxGridHierarchicalPipe, "gridHierarchical">;
}
/**
 * @hidden
 */
export declare class IgxGridHierarchicalPagingPipe implements PipeTransform {
    private gridAPI;
    constructor(gridAPI: GridBaseAPIService<IgxHierarchicalGridComponent>);
    transform(collection: any[], page: number, perPage: number, id: string, pipeTrigger: number): any[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridHierarchicalPagingPipe, never>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxGridHierarchicalPagingPipe, "gridHierarchicalPaging">;
}

//# sourceMappingURL=hierarchical-grid.pipes.d.ts.map