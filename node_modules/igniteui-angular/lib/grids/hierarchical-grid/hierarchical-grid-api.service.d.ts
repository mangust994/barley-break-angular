import { IgxHierarchicalGridComponent } from './hierarchical-grid.component';
import { IgxRowIslandComponent } from './row-island.component';
import { IPathSegment } from './hierarchical-grid-base.directive';
import { IgxGridBaseDirective, GridBaseAPIService } from '../grid/public_api';
import { GridType } from '../common/grid.interface';
import * as ɵngcc0 from '@angular/core';
export declare class IgxHierarchicalGridAPIService extends GridBaseAPIService<IgxGridBaseDirective & GridType> {
    protected childRowIslands: Map<string, IgxRowIslandComponent>;
    protected childGrids: Map<string, Map<any, IgxHierarchicalGridComponent>>;
    registerChildRowIsland(rowIsland: IgxRowIslandComponent): void;
    unsetChildRowIsland(rowIsland: IgxRowIslandComponent): void;
    getChildRowIsland(key: string): IgxRowIslandComponent;
    getChildGrid(path: Array<IPathSegment>): any;
    getChildGrids(inDepth?: boolean): any[];
    getParentRowId(childGrid: IgxHierarchicalGridComponent): any;
    registerChildGrid(parentRowID: any, rowIslandKey: string, grid: IgxHierarchicalGridComponent): void;
    getChildGridsForRowIsland(rowIslandKey: any): IgxHierarchicalGridComponent[];
    getChildGridByID(rowIslandKey: any, rowID: any): IgxHierarchicalGridComponent;
    get_row_expansion_state(record: any): boolean;
    allow_expansion_state_change(rowID: any, expanded: any): boolean;
    get_rec_by_id(rowID: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxHierarchicalGridAPIService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<IgxHierarchicalGridAPIService>;
}

//# sourceMappingURL=hierarchical-grid-api.service.d.ts.map