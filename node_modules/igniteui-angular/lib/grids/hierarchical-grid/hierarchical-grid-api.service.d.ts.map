{"version":3,"file":"hierarchical-grid-api.service.d.ts","sources":["hierarchical-grid-api.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IgxHierarchicalGridComponent } from './hierarchical-grid.component';\nimport { IgxRowIslandComponent } from './row-island.component';\nimport { IPathSegment } from './hierarchical-grid-base.directive';\nimport { IgxGridBaseDirective, GridBaseAPIService } from '../grid/public_api';\nimport { GridType } from '../common/grid.interface';\nexport declare class IgxHierarchicalGridAPIService extends GridBaseAPIService<IgxGridBaseDirective & GridType> {\n    protected childRowIslands: Map<string, IgxRowIslandComponent>;\n    protected childGrids: Map<string, Map<any, IgxHierarchicalGridComponent>>;\n    registerChildRowIsland(rowIsland: IgxRowIslandComponent): void;\n    unsetChildRowIsland(rowIsland: IgxRowIslandComponent): void;\n    getChildRowIsland(key: string): IgxRowIslandComponent;\n    getChildGrid(path: Array<IPathSegment>): any;\n    getChildGrids(inDepth?: boolean): any[];\n    getParentRowId(childGrid: IgxHierarchicalGridComponent): any;\n    registerChildGrid(parentRowID: any, rowIslandKey: string, grid: IgxHierarchicalGridComponent): void;\n    getChildGridsForRowIsland(rowIslandKey: any): IgxHierarchicalGridComponent[];\n    getChildGridByID(rowIslandKey: any, rowID: any): IgxHierarchicalGridComponent;\n    get_row_expansion_state(record: any): boolean;\n    allow_expansion_state_change(rowID: any, expanded: any): boolean;\n    get_rec_by_id(rowID: any): any;\n}\n"]}