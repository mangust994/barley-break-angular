import { AfterContentInit, ElementRef, TemplateRef } from '@angular/core';
import { IgxTabItemComponent } from './tab-item.component';
import { IgxTabItemTemplateDirective } from './tabs.directives';
import { IgxTabsBase, IgxTabsGroupBase } from './tabs.common';
import * as ɵngcc0 from '@angular/core';
export declare class IgxTabsGroupComponent extends IgxTabsGroupBase implements AfterContentInit {
    private _tabs;
    private _element;
    /**
     * An @Input property that allows you to enable/disable the `IgxTabGroupComponent`.
     * ```html
     * <igx-tabs-group label="Tab 2  Lorem ipsum dolor sit" icon="home" [disabled]="true">
     * ```
     */
    disabled: boolean;
    /**
     * An @Input property that sets the value of the `icon`.
     * The value should be valid icon name from {@link https://material.io/tools/icons/?style=baseline}.
     * ```html
     * <igx-tabs-group label="Tab 1" icon="home">
     * ```
     */
    icon: string;
    /**
     * An @Input property that sets the value of the `label`.
     * ```html
     * <igx-tabs-group label="Tab 1" icon="folder">
     * ```
     */
    label: string;
    /**
     * Sets/gets whether a tab group is selected.
     * ```typescript
     * this.tabGroup.isSelected = true;
     * ```
     * ```typescript
     * let isSelected = this.tabGroup.isSelected;
     * ```
     *
     * @memberof IgxTabsGroupComponent
     */
    get isSelected(): boolean;
    set isSelected(newValue: boolean);
    /**
     * Returns the native element of the tabs-group component
     * ```typescript
     *  const mytabsGroupElement: HTMLElement = tabsGroup.nativeElement;
     * ```
     */
    get nativeElement(): any;
    /**
     * @hidden
     */
    role: string;
    /**
     * @hidden
     */
    styleClass: boolean;
    /**
     * @hidden
     */
    protected tabTemplate: IgxTabItemTemplateDirective;
    private _tabTemplate;
    private _isSelected;
    constructor(_tabs: IgxTabsBase, _element: ElementRef);
    /**
     * An accessor that returns the `IgxTabItemComponent` component.
     * ```typescript
     * @ViewChild("MyTabsGroup")
     * public tab: IgxTabsGroupComponent;
     * ngAfterViewInIt(){
     *    let tabComponent = this.tab.relatedTab;
     * }
     * ```
     */
    get relatedTab(): IgxTabItemComponent;
    /**
     * An accessor that returns the value of the index of the `IgxTabsGroupComponent`.
     * ```typescript
     * @ViewChild("MyTabsGroup")
     * public tab: IgxTabsGroupComponent;
     * ngAfterViewInIt(){
     *    let tabIndex = this.tab.index;
     * }
     * ```
     */
    get index(): number;
    /**
     * @hidden
     */
    get customTabTemplate(): TemplateRef<any>;
    /**
     * @hidden
     */
    set customTabTemplate(template: TemplateRef<any>);
    /**
     * @hidden
     */
    ngAfterContentInit(): void;
    /**
     * A method that sets the focus on a tab.
     *
     * @memberof {@link IgxTabsGroupComponent}
     * ```typescript
     *  @ViewChild("MyChild")
     * public tab : IgxTabsGroupComponent;
     * ngAfterViewInit(){
     *     this.tab.select();
     * }
     * ```
     */
    select(): void;
    /**
     * @hidden
     */
    setSelectedInternal(newValue: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxTabsGroupComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxTabsGroupComponent, "igx-tabs-group", never, { "disabled": "disabled"; "icon": "icon"; "label": "label"; }, {}, ["tabTemplate"], ["*"]>;
}

//# sourceMappingURL=tabs-group.component.d.ts.map