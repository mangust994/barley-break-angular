{"version":3,"file":"tabs.component.d.ts","sources":["tabs.component.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, QueryList, OnDestroy, NgZone } from '@angular/core';\nimport { IgxTabItemComponent } from './tab-item.component';\nimport { IgxTabsGroupComponent } from './tabs-group.component';\nimport { IgxTabsBase, IgxTabItemBase } from './tabs.common';\nimport { PlatformUtil } from '../core/utils';\nexport declare const IgxTabsType: {\n    FIXED: \"fixed\";\n    CONTENTFIT: \"contentfit\";\n};\nexport declare type IgxTabsType = (typeof IgxTabsType)[keyof typeof IgxTabsType];\nexport declare class IgxTabsComponent implements IgxTabsBase, AfterViewInit, OnDestroy {\n    private _ngZone;\n    private platformUtil;\n    /**\n     * Provides an observable collection of all `IgxTabsGroupComponent`s.\n     * ```typescript\n     * const groupItems = this.myTabComponent.groups;\n     * ```\n     */\n    groups: QueryList<IgxTabsGroupComponent>;\n    /**\n     * Provides an observable collection of all `IgxTabItemComponent`s defined in the page.\n     * ```typescript\n     * const tabItems = this.myTabComponent.contentTabs;\n     * ```\n     */\n    contentTabs: QueryList<IgxTabItemComponent>;\n    /**\n     * An @Input property that sets the value of the `selectedIndex`.\n     * Default value is 0.\n     * ```html\n     * <igx-tabs selectedIndex=\"1\">\n     * ```\n     *\n     * Two-way data binding.\n     * ```html\n     * <igx-tabs [(selectedIndex)]=\"model.selectedIndex\">\n     * ```\n     */\n    get selectedIndex(): number;\n    set selectedIndex(index: number);\n    /**\n     * @hidden\n     */\n    selectedIndexChange: EventEmitter<number>;\n    /**\n     * Defines the tab header sizing mode. You can choose between `contentfit` or `fixed`.\n     * By default the header sizing mode is `contentfit`.\n     * ```html\n     * <igx-tabs type=\"fixed\">\n     *     <igx-tabs-group label=\"HOME\">Home</igx-tabs-group>\n     * </igx-tabs>\n     * ```\n     */\n    type: string | IgxTabsType;\n    /**\n     * @hidden\n     */\n    class: string;\n    /**\n     * Emitted when a tab item is deselected.\n     * ```html\n     * <igx-tabs (onTabItemDeselected)=\"itemDeselected($event)\">\n     *      <igx-tabs-group label=\"Tab 1\">This is Tab 1 content.</igx-tabs-group>\n     *      <igx-tabs-group label=\"Tab 2\">This is Tab 2 content.</igx-tabs-group>\n     * </igx-tabs>\n     * ```\n     * ```typescript\n     * itemDeselected(e){\n     *      const tabGroup = e.group;\n     *      const tabItem = e.tab;\n     * }\n     * ```\n     */\n    tabItemDeselected: EventEmitter<any>;\n    /**\n     * Emitted when a tab item is selected.\n     * ```html\n     * <igx-tabs (tabItemSelected)=\"itemSelected($event)\">\n     *      <igx-tabs-group label=\"Tab 1\">This is Tab 1 content.</igx-tabs-group>\n     *      <igx-tabs-group label=\"Tab 2\">This is Tab 2 content.</igx-tabs-group>\n     * </igx-tabs>\n     * ```\n     * ```typescript\n     * itemSelected(e){\n     *      const tabGroup = e.group;\n     *      const tabItem = e.tab;\n     * }\n     * ```\n     */\n    tabItemSelected: EventEmitter<any>;\n    /**\n     * @hidden\n     */\n    contentsContainer: ElementRef;\n    /**\n     * @hidden\n     */\n    headerContainer: ElementRef;\n    /**\n     * @hidden\n     */\n    itemsContainer: ElementRef;\n    /**\n     * @hidden\n     */\n    selectedIndicator: ElementRef;\n    /**\n     * @hidden\n     */\n    tabsContainer: ElementRef;\n    /**\n     * @hidden\n     */\n    viewPort: ElementRef;\n    /**\n     * Provides an observable collection of all `IgxTabItemComponent`s.\n     * ```typescript\n     * const tabItems = this.myTabComponent.viewTabs;\n     * ```\n     */\n    viewTabs: QueryList<IgxTabItemComponent>;\n    /**\n     * Enables/disables the transition animation of the tabs' content. Set to `false` by default.\n     * ````html\n     * <igx-tabs [disableAnimation]=\"true\"></igx-tabs>\n     */\n    disableAnimation: boolean;\n    private readonly _currentTabsId;\n    /**\n     * Sets/gets the `id` of the tabs.\n     *\n     * @remarks\n     * If not set, the `id` will have value `\"igx-tabs-0\"`.\n     *\n     * @example\n     * ```html\n     * <igx-tabs id=\"my-first-tabs\"></igx-tabs>\n     * ```\n     * @memberof IgxTabsComponent\n     */\n    id: string;\n    /**\n     * Provides an observable collection of all `IgxTabItemComponent`s.\n     * First try to get them as content children if not available get them as view children.\n     * ```typescript\n     * const tabItems = this.myTabComponent.tabs;\n     * ```\n     */\n    get tabs(): QueryList<IgxTabItemComponent>;\n    /**\n     * @hidden\n     */\n    get hasContentTabs(): boolean;\n    /**\n     * @hidden\n     */\n    calculatedWidth: number;\n    /**\n     * @hidden\n     */\n    visibleItemsWidth: number;\n    /**\n     * @hidden\n     */\n    offset: number;\n    private _groupChanges$;\n    private _selectedIndex;\n    private _resizeObserver;\n    /**\n     * @hidden\n     */\n    get cssClass(): string;\n    constructor(_ngZone: NgZone, platformUtil: PlatformUtil);\n    /**\n     * @hidden\n     */\n    scrollLeft(): void;\n    /**\n     * @hidden\n     */\n    scrollRight(): void;\n    /**\n     * @hidden\n     */\n    scrollElement(element: any, scrollRight: boolean): void;\n    /**\n     * Gets the selected `IgxTabItemComponent`.\n     * ```\n     * const selectedItem = this.myTabComponent.selectedTabItem;\n     * ```\n     */\n    get selectedTabItem(): IgxTabItemComponent;\n    /**\n     * @hidden\n     */\n    ngAfterViewInit(): void;\n    /**\n     * @hidden\n     */\n    performSelectionChange(newTab: IgxTabItemBase): void;\n    /**\n     * @hidden\n     */\n    getTabItemId(index: number): string;\n    /**\n     * @hidden\n     */\n    getTabsGroupId(index: number): string;\n    /**\n     * @hidden\n     */\n    transformContentAnimation(tab: IgxTabItemBase, duration: number): void;\n    /**\n     * @hidden\n     */\n    transformIndicatorAnimation(element: HTMLElement, duration?: number): void;\n    hideIndicator(): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n    private setGroupsAttributes;\n    private resetSelectionOnCollectionChanged;\n    private scroll;\n    private performDeselection;\n    private performSelection;\n    private bringNewTabIntoView;\n}\n/**\n * @hidden\n */\nexport declare class IgxTabsModule {\n}\n"]}