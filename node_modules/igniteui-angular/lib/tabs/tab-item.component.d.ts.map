{"version":3,"file":"tab-item.component.d.ts","sources":["tab-item.component.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, TemplateRef, NgZone, AfterViewInit, OnDestroy } from '@angular/core';\nimport { IgxTabsGroupComponent } from './tabs-group.component';\nimport { IgxTabItemBase, IgxTabsBase } from './tabs.common';\nimport { IgxTabItemTemplateDirective } from './tabs.directives';\nexport declare class IgxTabItemComponent extends IgxTabItemBase implements AfterViewInit, OnDestroy {\n    private _tabs;\n    private _element;\n    private _ngZone;\n    /**\n     * @hidden @internal\n     * Set to true when the tab item is automatically generated from the IgxTabsComponent when tab groups are defined.\n     */\n    autoGenerated: boolean;\n    /**\n     * Gets the group associated with the tab.\n     * ```html\n     * const relatedGroup = this.tabbar.tabs.toArray()[1].relatedGroup;\n     * ```\n     */\n    relatedGroup: IgxTabsGroupComponent;\n    /**\n     * @hidden @internal\n     */\n    role: string;\n    /**\n     * @hidden @internal\n     */\n    tabindex: number;\n    /**\n     * @hidden @internal\n     */\n    ariaLabel: string;\n    /**\n     * @hidden @internal\n     */\n    ariaDisabled: boolean;\n    /**\n     * @hidden @internal\n     */\n    ariaSelected: boolean;\n    /** @hidden */\n    protected defaultTabTemplate: TemplateRef<any>;\n    /** @hidden */\n    protected customTabTemplateDir: IgxTabItemTemplateDirective;\n    /** @hidden */\n    private _icon;\n    /**\n     * An @Input property that sets the value of the `icon`.\n     * The value should be valid icon name from {@link https://material.io/tools/icons/?style=baseline}.\n     * ```html\n     * <igx-tab-item label=\"Tab 1\" icon=\"home\">\n     * ```\n     */\n    get icon(): string;\n    set icon(newValue: string);\n    /**\n     * An @Input property that sets the value of the `label`.\n     * ```html\n     * <igx-tabs-item label=\"Tab 2\" icon=\"folder\">\n     * ```\n     */\n    get label(): string;\n    set label(newValue: string);\n    /** @hidden */\n    private _label;\n    private _nativeTabItem;\n    private _changesCount;\n    private _isSelected;\n    private _disabled;\n    private _resizeObserver;\n    constructor(_tabs: IgxTabsBase, _element: ElementRef, _ngZone: NgZone);\n    get provideCssClassSelected(): boolean;\n    get provideCssClassDisabled(): boolean;\n    get provideCssClass(): boolean;\n    /**\n     * @hidden\n     */\n    onClick(): void;\n    /**\n     * @hidden\n     */\n    onKeydown(event: KeyboardEvent): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    get changesCount(): number;\n    /**\n     * @hidden\n     */\n    get nativeTabItem(): ElementRef;\n    /**\n     * \tGets whether the tab is disabled.\n     * ```\n     * const disabledItem = this.myTabComponent.tabs.first.disabled;\n     * ```\n     */\n    get disabled(): boolean;\n    set disabled(newValue: boolean);\n    /**\n     * Gets whether the tab is selected.\n     * ```typescript\n     * const selectedItem = this.myTabComponent.tabs.first.isSelected;\n     * ```\n     */\n    get isSelected(): boolean;\n    set isSelected(newValue: boolean);\n    /**\n     * @hidden\n     */\n    select(): void;\n    /**\n     * @hidden\n     */\n    get index(): number;\n    /**\n     * @hidden\n     */\n    setSelectedInternal(newValue: boolean): void;\n    /**\n     * @hidden\n     */\n    get template(): TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    get context(): any;\n}\n"]}