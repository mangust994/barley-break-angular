{"version":3,"file":"slide.component.d.ts","sources":["slide.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, EventEmitter, ElementRef, AfterContentChecked } from '@angular/core';\nimport { Subject } from 'rxjs';\nexport declare enum Direction {\n    NONE = 0,\n    NEXT = 1,\n    PREV = 2\n}\n/**\n * A slide component that usually holds an image and/or a caption text.\n * IgxSlideComponent is usually a child component of an IgxCarouselComponent.\n *\n * ```\n * <igx-slide [input bindings] >\n *    <ng-content></ng-content>\n * </igx-slide>\n * ```\n *\n * @export\n */\nexport declare class IgxSlideComponent implements AfterContentChecked, OnDestroy {\n    private elementRef;\n    /**\n     * Gets/sets the `index` of the slide inside the carousel.\n     * ```html\n     * <igx-carousel>\n     *  <igx-slide index = \"1\"></igx-slide>\n     * <igx-carousel>\n     * ```\n     *\n     * @memberOf IgxSlideComponent\n     */\n    index: number;\n    /**\n     * Gets/sets the target `direction` for the slide.\n     * ```html\n     * <igx-carousel>\n     *  <igx-slide direction=\"NEXT\"></igx-slide>\n     * <igx-carousel>\n     * ```\n     *\n     * @memberOf IgxSlideComponent\n     */\n    direction: Direction;\n    total: number;\n    /**\n     * Returns the `tabIndex` of the slide component.\n     * ```typescript\n     * let tabIndex =  this.carousel.tabIndex;\n     * ```\n     *\n     * @memberof IgxSlideComponent\n     */\n    get tabIndex(): number;\n    /**\n     * @hidden\n     */\n    id: string;\n    /**\n     * Returns the `role` of the slide component.\n     * By default is set to `tabpanel`\n     *\n     * @memberof IgxSlideComponent\n     */\n    tab: string;\n    /** @hidden */\n    ariaLabelledBy: any;\n    /**\n     * Returns the class of the slide component.\n     * ```typescript\n     * let class =  this.slide.cssClass;\n     * ```\n     *\n     * @memberof IgxSlideComponent\n     */\n    cssClass: string;\n    /**\n     * Gets/sets the `active` state of the slide.\n     * ```html\n     * <igx-carousel>\n     *  <igx-slide [active] =\"false\"></igx-slide>\n     * <igx-carousel>\n     * ```\n     *\n     * Two-way data binding.\n     * ```html\n     * <igx-carousel>\n     *  <igx-slide [(active)] =\"model.isActive\"></igx-slide>\n     * <igx-carousel>\n     * ```\n     *\n     * @memberof IgxSlideComponent\n     */\n    get active(): boolean;\n    set active(value: boolean);\n    previous: boolean;\n    /**\n     * @hidden\n     */\n    activeChange: EventEmitter<boolean>;\n    private _active;\n    private _destroy$;\n    constructor(elementRef: ElementRef);\n    /**\n     * Returns a reference to the carousel element in the DOM.\n     * ```typescript\n     * let nativeElement =  this.slide.nativeElement;\n     * ```\n     *\n     * @memberof IgxSlideComponent\n     */\n    get nativeElement(): any;\n    /**\n     * @hidden\n     */\n    get isDestroyed(): Subject<boolean>;\n    ngAfterContentChecked(): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n}\n"]}