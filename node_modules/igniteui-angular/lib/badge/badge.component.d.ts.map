{"version":3,"file":"badge.component.d.ts","sources":["badge.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * Determines the igxBadge type\n */\nexport declare const IgxBadgeType: {\n    PRIMARY: \"primary\";\n    INFO: \"info\";\n    SUCCESS: \"success\";\n    WARNING: \"warning\";\n    ERROR: \"error\";\n};\nexport declare type IgxBadgeType = (typeof IgxBadgeType)[keyof typeof IgxBadgeType];\n/**\n * Badge provides visual notifications used to decorate avatars, menus, etc.\n *\n * @igxModule IgxBadgeModule\n *\n * @igxTheme igx-badge-theme\n *\n * @igxKeywords badge, icon, notification\n *\n * @igxGroup Data Entry & Display\n *\n * @remarks\n * The Ignite UI Badge is used to decorate avatars, navigation menus, or other components in the\n * application when visual notification is needed. They are usually designed as icons with a predefined\n * style to communicate information, success, warnings, or errors.\n *\n * @example\n * ```html\n * <igx-avatar>\n *   <igx-badge icon=\"check\" type=\"success\"></igx-badge>\n * </igx-avatar>\n */\nexport declare class IgxBadgeComponent {\n    /**\n     * Sets/gets the `id` of the badge.\n     *\n     * @remarks\n     * If not set, the `id` will have value `\"igx-badge-0\"`.\n     *\n     * @example\n     * ```html\n     * <igx-badge id=\"igx-badge-2\"></igx-badge>\n     * ```\n     */\n    id: string;\n    /**\n     * Sets/gets the type of the badge.\n     *\n     * @remarks\n     * Allowed values are `primary`, `info`, `success`, `warning`, `error`.\n     * Providing an invalid value won't display a badge.\n     *\n     * @example\n     * ```html\n     * <igx-badge type=\"success\"></igx-badge>\n     * ```\n     */\n    type: string | IgxBadgeType;\n    /**\n     * Sets/gets the value to be displayed inside the badge.\n     *\n     * @remarks\n     * If an `icon` property is already set the `icon` will be displayed.\n     * If neither a `value` nor an `icon` is set the content of the badge will be empty.\n     *\n     * @example\n     * ```html\n     * <igx-badge value=\"11\"></igx-badge>\n     * ```\n     */\n    value: string | number;\n    /**\n     * Sets/gets an icon for the badge from the material icons set.\n     *\n     * @remarks\n     * Has priority over the `value` property.\n     * If neither a `value` nor an `icon` is set the content of the badge will be empty.\n     * Providing an invalid value won't display anything.\n     *\n     * @example\n     * ```html\n     * <igx-badge icon=\"check\"></igx-badge>\n     * ```\n     */\n    icon: string;\n    /**\n     * Sets/gets the role attribute value.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyBadge\", { read: IgxBadgeComponent })\n     * public badge: IgxBadgeComponent;\n     *\n     * badge.role = 'status';\n     * ```\n     */\n    role: string;\n    /**\n     * Sets/gets the the css class to use on the badge.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyBadge\", { read: IgxBadgeComponent })\n     * public badge: IgxBadgeComponent;\n     *\n     * badge.cssClass = 'my-badge-class';\n     * ```\n     */\n    cssClass: string;\n    /**\n     * Sets/gets the aria-label attribute value.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyBadge\", { read: IgxBadgeComponent })\n     * public badge: IgxBadgeComponent;\n     *\n     * badge.label = 'badge';\n     * ```\n     */\n    label: string;\n    /**\n     * Defines a human-readable, accessor, author-localized description for\n     * the `type` and the `icon` or `value` of the element.\n     *\n     * @hidden\n     * @internal\n     */\n    get roleDescription(): string;\n    get infoClass(): boolean;\n    get successClass(): boolean;\n    get warningClass(): boolean;\n    get errorClass(): boolean;\n}\n/**\n * @hidden\n */\nexport declare class IgxBadgeModule {\n}\n"]}