{"version":3,"file":"icon.component.d.ts","sources":["icon.component.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, OnInit, TemplateRef, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { IgxIconService } from './icon.service';\n/**\n * Icon provides a way to include material icons to markup\n *\n * @igxModule IgxIconModule\n *\n * @igxTheme igx-icon-theme\n *\n * @igxKeywords icon, picture\n *\n * @igxGroup Display\n *\n * @remarks\n *\n * The Ignite UI Icon makes it easy for developers to include material design icons directly in their markup. The icons\n * support different icon families and can be marked as active or disabled using the `active` property. This will change the appearance\n * of the icon.\n *\n * @example\n * ```html\n * <igx-icon family=\"filter-icons\" active=\"true\">home</igx-icon>\n * ```\n */\nexport declare class IgxIconComponent implements OnInit, OnDestroy {\n    el: ElementRef;\n    private iconService;\n    private ref;\n    /**\n     *  This allows you to change the value of `class.igx-icon`. By default it's `igx-icon`.\n     *\n     * @hidden\n     * @internal\n     */\n    cssClass: string;\n    /**\n     *  This allows you to disable the `aria-hidden` attribute. By default it's applied.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\") public icon: IgxIconComponent;\n     * constructor(private cdRef:ChangeDetectorRef) {}\n     * ngAfterViewInit() {\n     *     this.icon.ariaHidden = false;\n     *     this.cdRef.detectChanges();\n     * }\n     * ```\n     */\n    ariaHidden: boolean;\n    /**\n     * An @Input property that sets the value of the `family`. By default it's \"material\".\n     *\n     * @example\n     * ```html\n     * <igx-icon family=\"material\">settings</igx-icon>\n     * ```\n     */\n    family: string;\n    /**\n     * An @Input property that allows you to disable the `active` property. By default it's applied.\n     *\n     * @example\n     * ```html\n     * <igx-icon [active]=\"false\">settings</igx-icon>\n     * ```\n     */\n    active: boolean;\n    /**\n     * An @Input property that allows you to change the `color` of the icon.\n     *\n     * * @deprecated\n     *\n     * @example\n     * ```html\n     * <igx-icon color=\"blue\">settings</igx-icon>\n     * ```\n     */\n    color: string;\n    /**\n     *  An @Input property that allows you to set the `name` of the icon.\n     *\n     *  @example\n     * ```html\n     * <igx-icon name=\"contains\" family=\"filter-icons\"></igx-icon>\n     * ```\n     */\n    name: string;\n    private noLigature;\n    private explicitLigature;\n    private svgImage;\n    private destroy$;\n    constructor(el: ElementRef, iconService: IgxIconService, ref: ChangeDetectorRef);\n    /**\n     * @hidden\n     * @internal\n     */\n    ngOnInit(): void;\n    /**\n     * @hidden\n     * @internal\n     */\n    ngOnDestroy(): void;\n    /**\n     *  An accessor that returns the value of the family property.\n     *\n     * @example\n     * ```typescript\n     *  @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let iconFamily = this.icon.getFamily;\n     * }\n     * ```\n     */\n    get getFamily(): string;\n    /**\n     *  An accessor that returns the value of the active property.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let iconActive = this.icon.getActive;\n     * }\n     * ```\n     */\n    get getActive(): boolean;\n    /**\n     *  An accessor that returns inactive property.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let iconActive = this.icon.getInactive;\n     * }\n     * ```\n     */\n    get getInactive(): boolean;\n    /**\n     * An accessor that returns the opposite value of the `color` property.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let color = this.icon.getColor;\n     * }\n     * ```\n     */\n    get getColor(): string;\n    /**\n     * An accessor that returns the value of the iconName property.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let name = this.icon.getName;\n     * }\n     * ```\n     */\n    get getName(): string;\n    /**\n     *  An accessor that returns the key of the SVG image.\n     *  The key consists of the font-family and the name separated by underscore.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let svgKey = this.icon.getSvgKey;\n     * }\n     * ```\n     */\n    get getSvgKey(): string;\n    /**\n     *   An accessor that returns a TemplateRef to explicit, svg or no ligature.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let iconTemplate = this.icon.template;\n     * }\n     * ```\n     */\n    get template(): TemplateRef<HTMLElement>;\n    /**\n     * @hidden\n     * @internal\n     */\n    private updateIconClass;\n}\n"]}