{"version":3,"file":"splitter-pane.component.d.ts","sources":["splitter-pane.component.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, EventEmitter } from '@angular/core';\n/**\n * Represents individual resizable/collapsible panes.\n *\n * @igxModule IgxSplitterModule\n *\n * @igxParent IgxSplitterComponent\n *\n * @igxKeywords pane\n *\n * @igxGroup presentation\n *\n * @remarks\n *  Users can control the resize behavior via the min and max size properties.\n */\nexport declare class IgxSplitterPaneComponent {\n    private el;\n    /**\n     * @hidden @internal\n     * Gets/Sets the 'display' property of the current pane.\n     */\n    display: string;\n    /**\n     * Gets/Sets the minimum allowed size of the current pane.\n     *\n     * @example\n     * ```html\n     * <igx-splitter>\n     *  <igx-splitter-pane [minSize]='minSize'>...</igx-splitter-pane>\n     * </igx-splitter>\n     * ```\n     */\n    minSize: string;\n    /**\n     * Gets/Set the maximum allowed size of the current pane.\n     *\n     * @example\n     * ```html\n     * <igx-splitter>\n     *  <igx-splitter-pane [maxSize]='maxSize'>...</igx-splitter-pane>\n     * </igx-splitter>\n     * ```\n     */\n    maxSize: string;\n    /**\n     * Gets/Sets whether pane is resizable.\n     *\n     * @example\n     * ```html\n     * <igx-splitter>\n     *  <igx-splitter-pane [resizable]='false'>...</igx-splitter-pane>\n     * </igx-splitter>\n     * ```\n     * @remarks\n     * If pane is not resizable its related splitter bar cannot be dragged.\n     */\n    resizable: boolean;\n    /**\n     * Event fired when collapsed state of pane is changed.\n     *\n     * @example\n     * ```html\n     * <igx-splitter>\n     *  <igx-splitter-pane (onToggle)='onPaneToggle($event)'>...</igx-splitter-pane>\n     * </igx-splitter>\n     * ```\n     */\n    onToggle: EventEmitter<IgxSplitterPaneComponent>;\n    /**\n     * Event fired when collapsed state of pane is changed.\n     *\n     * @example\n     * ```html\n     * <igx-splitter>\n     *  <igx-splitter-pane (collapsedChange)='paneCollapsedChange($event)'>...</igx-splitter-pane>\n     * </igx-splitter>\n     * ```\n     */\n    collapsedChange: EventEmitter<boolean>;\n    /** @hidden @internal */\n    order: number;\n    /**\n     * @hidden @internal\n     * Gets/Sets the `overflow`.\n     */\n    overflow: string;\n    /**\n     * @hidden @internal\n     * Gets/Sets the `minHeight` and `minWidth` properties of the current pane.\n     */\n    minHeight: number;\n    /**\n     * @hidden @internal\n     * Gets/Sets the `maxHeight` and `maxWidth` properties of the current `IgxSplitterPaneComponent`.\n     */\n    maxHeight: string;\n    /** @hidden @internal */\n    owner: any;\n    /**\n     * Gets/Sets the size of the current pane.\n     *  * @example\n     * ```html\n     * <igx-splitter>\n     *  <igx-splitter-pane [size]='size'>...</igx-splitter-pane>\n     * </igx-splitter>\n     * ```\n     */\n    get size(): string;\n    set size(value: string);\n    /** @hidden @internal */\n    get isPercentageSize(): boolean;\n    /** @hidden @internal */\n    get dragSize(): any;\n    set dragSize(val: any);\n    /**\n     *\n     * @hidden @internal\n     * Gets the host native element.\n     */\n    get element(): any;\n    /**\n     * @hidden @internal\n     * Gets the `flex` property of the current `IgxSplitterPaneComponent`.\n     */\n    get flex(): string;\n    /**\n     * Gets/Sets whether current pane is collapsed.\n     *\n     * @example\n     * ```typescript\n     * const isCollapsed = pane.collapsed;\n     * ```\n     */\n    set collapsed(value: boolean);\n    get collapsed(): boolean;\n    private _size;\n    private _dragSize;\n    private _collapsed;\n    constructor(el: ElementRef);\n    /**\n     * Toggles the collapsed state of the pane.\n     *\n     * @example\n     * ```typescript\n     * pane.toggle();\n     * ```\n     */\n    toggle(): void;\n    /** @hidden @internal */\n    private _getSiblings;\n}\n"]}