{"version":3,"file":"expansion-panel-header.component.d.ts","sources":["expansion-panel-header.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';\nimport { IgxExpansionPanelBase, IExpansionPanelCancelableEventArgs } from './expansion-panel.common';\n/**\n * @hidden\n */\nexport declare const ICON_POSITION: {\n    LEFT: \"left\";\n    NONE: \"none\";\n    RIGHT: \"right\";\n};\nexport declare type ICON_POSITION = (typeof ICON_POSITION)[keyof typeof ICON_POSITION];\nexport declare class IgxExpansionPanelHeaderComponent {\n    panel: IgxExpansionPanelBase;\n    cdr: ChangeDetectorRef;\n    elementRef: ElementRef;\n    /**\n     * Returns a reference to the `igx-expansion-panel-icon` element;\n     * If `iconPosition` is `NONE` - return null;\n     */\n    get iconRef(): ElementRef;\n    /**\n     * @hidden\n     */\n    set iconTemplate(val: boolean);\n    /**\n     * @hidden\n     */\n    get iconTemplate(): boolean;\n    /**\n     * Gets/sets the `aria-level` attribute of the header\n     * Get\n     * ```typescript\n     *  const currentAriaLevel = this.panel.header.lv;\n     * ```\n     * Set\n     * ```typescript\n     *  this.panel.header.lv = '5';\n     * ```\n     * ```html\n     *  <igx-expansion-panel-header [lv]=\"myCustomLevel\"></igx-expansion-panel-header>\n     * ```\n     */\n    lv: string;\n    /**\n     * Gets/sets the `role` attribute of the header\n     * Get\n     * ```typescript\n     *  const currentRole = this.panel.header.role;\n     * ```\n     * Set\n     * ```typescript\n     *  this.panel.header.role = '5';\n     * ```\n     * ```html\n     *  <igx-expansion-panel-header [role]=\"'custom'\"></igx-expansion-panel-header>\n     * ```\n     */\n    role: string;\n    /**\n     * @hidden\n     */\n    get controls(): string;\n    /**\n     * Gets/sets the position of the expansion-panel-header expand/collapse icon\n     * Accepts `left`, `right` or `none`\n     * ```typescript\n     *  const currentIconPosition = this.panel.header.iconPosition;\n     * ```\n     * Set\n     * ```typescript\n     *  this.panel.header.iconPosition = 'left';\n     * ```\n     * ```html\n     *  <igx-expansion-panel-header [iconPosition]=\"'right'\"></igx-expansion-panel-header>\n     * ```\n     */\n    iconPosition: ICON_POSITION;\n    /**\n     * Emitted whenever a user interacts with the header host\n     * ```typescript\n     *  handleInteraction(event: IExpansionPanelCancelableEventArgs) {\n     *  ...\n     * }\n     * ```\n     * ```html\n     *  <igx-expansion-panel-header (onInteraction)=\"handleInteraction($event)\">\n     *      ...\n     *  </igx-expansion-panel-header>\n     * ```\n     */\n    onInteraction: EventEmitter<IExpansionPanelCancelableEventArgs>;\n    /**\n     * @hidden\n     */\n    cssClass: string;\n    /**\n     * @hidden\n     */\n    get isExpanded(): boolean;\n    /**\n     * Gets/sets the whether the header is disabled\n     * When disabled, the header will not handle user events and will stop their propagation\n     *\n     * ```typescript\n     *  const isDisabled = this.panel.header.disabled;\n     * ```\n     * Set\n     * ```typescript\n     *  this.panel.header.disabled = true;\n     * ```\n     * ```html\n     *  <igx-expansion-panel-header [disabled]=\"true\">\n     *     ...\n     *  </igx-expansion-panel-header>\n     * ```\n     */\n    disabled: boolean;\n    /** @hidden @internal */\n    private customIconRef;\n    /** @hidden @internal */\n    private defaultIconRef;\n    /**\n     * Sets/gets the `id` of the expansion panel header.\n     * ```typescript\n     * let panelHeaderId =  this.panel.header.id;\n     * ```\n     *\n     * @memberof IgxExpansionPanelComponent\n     */\n    id: string;\n    private _iconTemplate;\n    constructor(panel: IgxExpansionPanelBase, cdr: ChangeDetectorRef, elementRef: ElementRef);\n    /**\n     * @hidden\n     */\n    onAction(evt?: Event): void;\n    /** @hidden @internal */\n    openPanel(event: KeyboardEvent): void;\n    /** @hidden @internal */\n    closePanel(event: KeyboardEvent): void;\n    /**\n     * @hidden\n     */\n    get iconPositionClass(): string;\n}\n"]}