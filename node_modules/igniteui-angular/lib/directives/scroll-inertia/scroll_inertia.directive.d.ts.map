{"version":3,"file":"scroll_inertia.directive.d.ts","sources":["scroll_inertia.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, NgZone, OnInit, OnDestroy } from '@angular/core';\n/**\n * @hidden\n */\nexport declare class IgxScrollInertiaDirective implements OnInit, OnDestroy {\n    private element;\n    private _zone;\n    IgxScrollInertiaDirection: string;\n    IgxScrollInertiaScrollContainer: any;\n    wheelStep: number;\n    inertiaStep: number;\n    swipeToleranceX: number;\n    inertiaDeltaY: number;\n    inertiaDeltaX: number;\n    inertiaDuration: number;\n    private _touchInertiaAnimID;\n    private _startX;\n    private _startY;\n    private _touchStartX;\n    private _touchStartY;\n    private _lastTouchEnd;\n    private _lastTouchX;\n    private _lastTouchY;\n    private _savedSpeedsX;\n    private _savedSpeedsY;\n    private _totalMovedX;\n    private _offsetRecorded;\n    private _offsetDirection;\n    private _touchPrevented;\n    private _lastMovedX;\n    private _lastMovedY;\n    private _gestureObject;\n    private setPointerCaptureFName;\n    private releasePointerCaptureFName;\n    private _pointer;\n    private _nextX;\n    private _nextY;\n    private parentElement;\n    private baseDeltaMultiplier;\n    private firefoxDeltaMultiplier;\n    constructor(element: ElementRef, _zone: NgZone);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     * Function that is called when scrolling with the mouse wheel or using touchpad\n     */\n    protected onWheel(evt: any): void;\n    /**\n     * @hidden\n     * When there is still room to scroll up/down prevent the parent elements from scrolling too.\n     */\n    protected preventParentScroll(evt: any, preventDefault: any): void;\n    /**\n     * @hidden\n     * Function that is called the first moment we start interacting with the content on a touch device\n     */\n    protected onTouchStart(event: any): boolean;\n    /**\n     * @hidden\n     * Function that is called when we need to scroll the content based on touch interactions\n     */\n    protected onTouchMove(event: any): boolean;\n    protected onTouchEnd(event: any): void;\n    /**\n     * @hidden\n     * Function that is called when we need to detect touch starting on a touch device on IE/Edge\n     */\n    protected onPointerDown(event: any): boolean;\n    /**\n     * @hidden\n     * Function that is called when we need to detect touch ending on a touch device on IE/Edge\n     */\n    protected onPointerUp(event: any): boolean;\n    /**\n     * @hidden\n     *  Function that is called when a gesture begins on IE/Edge\n     */\n    protected onMSGestureStart(event: any): boolean;\n    /**\n     * @hidden\n     * Function that is called when a we need to scroll based on the gesture performed on IE/Edge\n     */\n    protected onMSGestureChange(event: any): boolean;\n    protected _inertiaInit(speedX: any, speedY: any): void;\n    private calcAxisCoords;\n    private _scrollTo;\n    private _scrollToX;\n    private _scrollToY;\n}\n/**\n * @hidden\n */\nexport declare class IgxScrollInertiaModule {\n}\n"]}