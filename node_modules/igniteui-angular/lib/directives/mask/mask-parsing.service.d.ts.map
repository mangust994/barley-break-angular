{"version":3,"file":"mask-parsing.service.d.ts","sources":["mask-parsing.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/** @hidden */\nexport declare const MASK_FLAGS: string[];\n/** @hidden */\nexport interface MaskOptions {\n    format: string;\n    promptChar: string;\n}\n/** @hidden */\nexport interface Replaced {\n    value: string;\n    end: number;\n}\n/** @hidden */\nexport declare class MaskParsingService {\n    applyMask(inputVal: string, maskOptions: MaskOptions): string;\n    parseValueFromMask(maskedValue: string, maskOptions: MaskOptions): string;\n    replaceInMask(maskedValue: string, value: string, maskOptions: MaskOptions, start: number, end: number): Replaced;\n    replaceCharAt(strValue: string, index: number, char: string): string;\n    /** Validates only non literal positions. */\n    private validateCharOnPosition;\n    private getMaskLiterals;\n    private getNonLiteralIndices;\n    private getNonLiteralValues;\n}\n"]}