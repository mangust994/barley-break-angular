{"version":3,"file":"autocomplete.directive.d.ts","sources":["autocomplete.directive.d.ts"],"names":[],"mappingssourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, AfterViewInit, OnInit } from '@angular/core';\nimport { NgModel, FormControlName } from '@angular/forms';\nimport { CancelableEventArgs, IBaseEventArgs } from '../../core/utils';\nimport { IPositionStrategy, IScrollStrategy } from '../../services/public_api';\nimport { IgxDropDownComponent, IgxDropDownItemNavigationDirective } from '../../drop-down/public_api';\nimport { IgxInputGroupComponent } from '../../input-group/public_api';\nimport { IgxOverlayOutletDirective } from '../toggle/toggle.directive';\n/**\n * Interface that encapsulates onItemSelection event arguments - new value and cancel selection.\n *\n * @export\n */\nexport interface AutocompleteItemSelectionEventArgs extends CancelableEventArgs, IBaseEventArgs {\n    /**\n     * New value selected from the drop down\n     */\n    value: string;\n}\nexport interface AutocompleteOverlaySettings {\n    /** Position strategy to use with this settings */\n    positionStrategy?: IPositionStrategy;\n    /** Scroll strategy to use with this settings */\n    scrollStrategy?: IScrollStrategy;\n    /** Set the outlet container to attach the overlay to */\n    outlet?: IgxOverlayOutletDirective | ElementRef;\n}\n/**\n * **Ignite UI for Angular Autocomplete** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/autocomplete.html)\n *\n * The igxAutocomplete directive provides a way to enhance a text input\n * by showing a drop down of suggested options, provided by the developer.\n *\n * Example:\n * ```html\n * <input type=\"text\" [igxAutocomplete]=\"townsPanel\" #autocompleteRef=\"igxAutocomplete\"/>\n * <igx-drop-down #townsPanel>\n *     <igx-drop-down-item *ngFor=\"let town of towns | startsWith:townSelected\" [value]=\"town\">\n *         {{town}}\n *     </igx-drop-down-item>\n * </igx-drop-down>\n * ```\n */\nexport declare class IgxAutocompleteDirective extends IgxDropDownItemNavigationDirective implements OnDestroy, AfterViewInit, OnInit {\n    protected ngModel: NgModel;\n    protected formControl: FormControlName;\n    protected group: IgxInputGroupComponent;\n    protected elementRef: ElementRef;\n    protected cdr: ChangeDetectorRef;\n    /**\n     * Sets the target of the autocomplete directive\n     *\n     * ```html\n     * <!-- Set -->\n     * <input [igxAutocomplete]=\"dropdown\" />\n     * ...\n     * <igx-drop-down #dropdown>\n     * ...\n     * </igx-drop-down>\n     * ```\n     */\n    get target(): IgxDropDownComponent;\n    set target(v: IgxDropDownComponent);\n    /**\n     * Provide overlay settings for the autocomplete drop down\n     *\n     * ```typescript\n     * // get\n     * let settings = this.autocomplete.autocompleteSettings;\n     * ```\n     * ```html\n     * <!--set-->\n     * <input type=\"text\" [igxAutocomplete]=\"townsPanel\" [igxAutocompleteSettings]=\"settings\"/>\n     * ```\n     * ```typescript\n     * // set\n     * this.settings = {\n     *  positionStrategy: new ConnectedPositioningStrategy({\n     *      closeAnimation: null,\n     *      openAnimation: null\n     *  })\n     * };\n     * ```\n     */\n    autocompleteSettings: AutocompleteOverlaySettings;\n    /** @hidden @internal */\n    autofill: string;\n    /** @hidden  @internal */\n    role: string;\n    /**\n     * Enables/disables autocomplete component\n     *\n     * ```typescript\n     * // get\n     * let disabled = this.autocomplete.disabled;\n     * ```\n     * ```html\n     * <!--set-->\n     * <input type=\"text\" [igxAutocomplete]=\"townsPanel\" [igxAutocompleteDisabled]=\"disabled\"/>\n     * ```\n     * ```typescript\n     * // set\n     * public disabled = true;\n     * ```\n     */\n    disabled: boolean;\n    /**\n     * Emitted after item from the drop down is selected\n     *\n     * ```html\n     * <input igxInput [igxAutocomplete]=\"townsPanel\" (onItemSelected)='itemSelected($event)' />\n     * ```\n     */\n    onItemSelected: EventEmitter<AutocompleteItemSelectionEventArgs>;\n    /** @hidden @internal */\n    get nativeElement(): HTMLInputElement;\n    /** @hidden @internal */\n    get parentElement(): HTMLElement;\n    private get settings();\n    /** @hidden  @internal */\n    get ariaExpanded(): boolean;\n    /** @hidden  @internal */\n    get hasPopUp(): string;\n    /** @hidden  @internal */\n    get ariaOwns(): string;\n    /** @hidden  @internal */\n    get ariaActiveDescendant(): string;\n    /** @hidden  @internal */\n    get ariaAutocomplete(): string;\n    protected id: string;\n    protected get model(): FormControlName | NgModel;\n    private _shouldBeOpen;\n    private destroy$;\n    private defaultSettings;\n    constructor(ngModel: NgModel, formControl: FormControlName, group: IgxInputGroupComponent, elementRef: ElementRef, cdr: ChangeDetectorRef);\n    /** @hidden  @internal */\n    onInput(): void;\n    /** @hidden  @internal */\n    onArrowDown(event: Event): void;\n    /** @hidden  @internal */\n    onTab(): void;\n    /** @hidden  @internal */\n    handleKeyDown(event: any): void;\n    /** @hidden  @internal */\n    onArrowDownKeyDown(): void;\n    /** @hidden  @internal */\n    onArrowUpKeyDown(): void;\n    /** @hidden  @internal */\n    onEndKeyDown(): void;\n    /** @hidden  @internal */\n    onHomeKeyDown(): void;\n    /**\n     * Closes autocomplete drop down\n     */\n    close(): void;\n    /**\n     * Opens autocomplete drop down\n     */\n    open(): void;\n    /** @hidden @internal */\n    ngOnInit(): void;\n    /** @hidden */\n    ngOnDestroy(): void;\n    ngAfterViewInit(): void;\n    private get collapsed();\n    private select;\n    private highlightFirstItem;\n}\n/** @hidden */\nexport declare class IgxAutocompleteModule {\n}\n"]}