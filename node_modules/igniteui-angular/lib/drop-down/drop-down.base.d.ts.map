{"version":3,"file":"drop-down.base.d.ts","sources":["drop-down.base.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, QueryList, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { Navigate, ISelectionEventArgs } from './drop-down.common';\nimport { IDropDownList } from './drop-down.common';\nimport { DropDownActionKey } from './drop-down.common';\nimport { IgxDropDownItemBaseDirective } from './drop-down-item.base';\nimport { DisplayDensityBase, IDisplayDensityOptions } from '../core/density';\n/**\n * An abstract class, defining a drop-down component, with:\n * Properties for display styles and classes\n * A collection items of type `IgxDropDownItemBaseDirective`\n * Properties and methods for navigating (highlighting/focusing) items from the collection\n * Properties and methods for selecting items from the collection\n */\nexport declare abstract class IgxDropDownBaseDirective extends DisplayDensityBase implements IDropDownList {\n    protected elementRef: ElementRef;\n    protected cdr: ChangeDetectorRef;\n    protected _displayDensityOptions: IDisplayDensityOptions;\n    /**\n     * Emitted when item selection is changing, before the selection completes\n     *\n     * ```html\n     * <igx-drop-down (onSelection)='handleSelection()'></igx-drop-down>\n     * ```\n     */\n    onSelection: EventEmitter<ISelectionEventArgs>;\n    /**\n     *  Gets/Sets the width of the drop down\n     *\n     * ```typescript\n     * // get\n     * let myDropDownCurrentWidth = this.dropdown.width;\n     * ```\n     * ```html\n     * <!--set-->\n     * <igx-drop-down [width]='160px'></igx-drop-down>\n     * ```\n     */\n    width: string;\n    /**\n     * Gets/Sets the height of the drop down\n     *\n     * ```typescript\n     * // get\n     * let myDropDownCurrentHeight = this.dropdown.height;\n     * ```\n     * ```html\n     * <!--set-->\n     * <igx-drop-down [height]='400px'></igx-drop-down>\n     * ```\n     */\n    height: string;\n    /**\n     * Gets/Sets the drop down's id\n     *\n     * ```typescript\n     * // get\n     * let myDropDownCurrentId = this.dropdown.id;\n     * ```\n     * ```html\n     * <!--set-->\n     * <igx-drop-down [id]='newDropDownId'></igx-drop-down>\n     * ```\n     */\n    get id(): string;\n    set id(value: string);\n    /**\n     * Gets/Sets the drop down's container max height.\n     *\n     * ```typescript\n     * // get\n     * let maxHeight = this.dropdown.maxHeight;\n     * ```\n     * ```html\n     * <!--set-->\n     * <igx-drop-down [maxHeight]='200px'></igx-drop-down>\n     * ```\n     */\n    maxHeight: any;\n    /**\n     * @hidden @internal\n     */\n    cssClass: boolean;\n    /**\n     * Get all non-header items\n     *\n     * ```typescript\n     * let myDropDownItems = this.dropdown.items;\n     * ```\n     */\n    get items(): IgxDropDownItemBaseDirective[];\n    /**\n     * Get all header items\n     *\n     * ```typescript\n     * let myDropDownHeaderItems = this.dropdown.headers;\n     * ```\n     */\n    get headers(): IgxDropDownItemBaseDirective[];\n    /**\n     * Get dropdown html element\n     *\n     * ```typescript\n     * let myDropDownElement = this.dropdown.element;\n     * ```\n     */\n    get element(): any;\n    /**\n     * @hidden @internal\n     * Get dropdown's html element of its scroll container\n     */\n    get scrollContainer(): HTMLElement;\n    /**\n     * @hidden\n     * @internal\n     */\n    children: QueryList<IgxDropDownItemBaseDirective>;\n    protected _width: any;\n    protected _height: any;\n    protected _focusedItem: any;\n    protected _id: string;\n    /**\n     * Gets if the dropdown is collapsed\n     */\n    abstract readonly collapsed: boolean;\n    constructor(elementRef: ElementRef, cdr: ChangeDetectorRef, _displayDensityOptions: IDisplayDensityOptions);\n    /** Keydown Handler */\n    onItemActionKey(key: DropDownActionKey, event?: Event): void;\n    /**\n     * Emits onSelection with the target item & event\n     *\n     * @hidden @internal\n     * @param newSelection the item selected\n     * @param event the event that triggered the call\n     */\n    selectItem(newSelection?: IgxDropDownItemBaseDirective, event?: Event): void;\n    /**\n     * @hidden @internal\n     */\n    get focusedItem(): IgxDropDownItemBaseDirective;\n    /**\n     * @hidden @internal\n     */\n    set focusedItem(item: IgxDropDownItemBaseDirective);\n    /**\n     * Navigates to the item on the specified index\n     *\n     * @param newIndex number - the index of the item in the `items` collection\n     */\n    navigateItem(newIndex: number): void;\n    /**\n     * @hidden @internal\n     */\n    navigateFirst(): void;\n    /**\n     * @hidden @internal\n     */\n    navigateLast(): void;\n    /**\n     * @hidden @internal\n     */\n    navigateNext(): void;\n    /**\n     * @hidden @internal\n     */\n    navigatePrev(): void;\n    protected scrollToHiddenItem(newItem: IgxDropDownItemBaseDirective): void;\n    protected navigate(direction: Navigate, currentIndex?: number): void;\n    protected getNearestSiblingFocusableItemIndex(startIndex: number, direction: Navigate): number;\n}\n"]}