{"version":3,"file":"days-view.component.d.ts","sources":["days-view.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, QueryList, DoCheck, OnInit } from '@angular/core';\nimport { ICalendarDate } from '../../calendar/calendar';\nimport { IgxDayItemComponent } from './day-item.component';\nimport { DateRangeDescriptor } from '../../core/dates';\nimport { IgxCalendarBaseDirective } from '../calendar-base';\nimport { IViewChangingEventArgs } from './days-view.interface';\nimport { IgxDaysViewNavigationService } from '../days-view/daysview-navigation.service';\nexport declare class IgxDaysViewComponent extends IgxCalendarBaseDirective implements DoCheck, OnInit {\n    daysNavService: IgxDaysViewNavigationService;\n    /**\n     * Sets/gets the `id` of the days view.\n     * If not set, the `id` will have value `\"igx-days-view-0\"`.\n     * ```html\n     * <igx-days-view id=\"my-days-view\"></igx-days-view>\n     * ```\n     * ```typescript\n     * let daysViewId =  this.daysView.id;\n     * ```\n     */\n    id: string;\n    /**\n     * @hidden\n     */\n    changeDaysView: boolean;\n    /**\n     * Show/hide week numbers\n     *\n     * @example\n     * ```html\n     * <igx-days-view [showWeekNumbers]=\"true\"></igx-days-view>\n     * ``\n     */\n    showWeekNumbers: boolean;\n    /**\n     * @hidden\n     * @internal\n     */\n    set activeDate(value: string);\n    get activeDate(): string;\n    /**\n     * @hidden\n     */\n    dateSelection: EventEmitter<ICalendarDate>;\n    /**\n     * @hidden\n     */\n    viewChanging: EventEmitter<IViewChangingEventArgs>;\n    /**\n     * @hidden\n     */\n    activeDateChange: EventEmitter<string>;\n    /**\n     * @hidden\n     */\n    monthsViewBlur: EventEmitter<any>;\n    /**\n     * @hidden\n     */\n    dates: QueryList<IgxDayItemComponent>;\n    /**\n     * The default css class applied to the component.\n     *\n     * @hidden\n     */\n    styleClass: boolean;\n    /**\n     * @hidden\n     */\n    outOfRangeDates: DateRangeDescriptor[];\n    /**\n     * @hidden\n     */\n    nextMonthView: IgxDaysViewComponent;\n    /** @hidden */\n    prevMonthView: IgxDaysViewComponent;\n    /** @hidden */\n    shouldResetDate: boolean;\n    private _activeDate;\n    /**\n     * @hidden\n     */\n    constructor(daysNavService: IgxDaysViewNavigationService);\n    /**\n     * @hidden\n     * @internal\n     */\n    resetActiveMonth(): void;\n    /**\n     * @hidden\n     * @internal\n     */\n    pointerDown(): void;\n    /**\n     * @hidden\n     */\n    onKeydownArrow(event: KeyboardEvent): void;\n    /**\n     * @hidden\n     */\n    onKeydownHome(event: KeyboardEvent): void;\n    /**\n     * @hidden\n     */\n    onKeydownEnd(event: KeyboardEvent): void;\n    /**\n     * @hidden\n     */\n    get getCalendarMonth(): ICalendarDate[][];\n    /**\n     * @hidden\n     */\n    ngOnInit(): void;\n    /**\n     * @hidden\n     */\n    ngDoCheck(): void;\n    /**\n     * @hidden\n     * @internal\n     */\n    tabIndex(day: ICalendarDate): number;\n    /**\n     * Returns the week number by date\n     *\n     * @hidden\n     */\n    getWeekNumber(date: any): number;\n    /**\n     * Returns the locale representation of the date in the days view.\n     *\n     * @hidden\n     */\n    formattedDate(value: Date): string;\n    /**\n     * @hidden\n     */\n    generateWeekHeader(): string[];\n    /**\n     * @hidden\n     */\n    rowTracker(index: any, item: any): string;\n    /**\n     * @hidden\n     */\n    dateTracker(index: any, item: any): string;\n    /**\n     * @hidden\n     */\n    isCurrentMonth(value: Date): boolean;\n    /**\n     * @hidden\n     */\n    isCurrentYear(value: Date): boolean;\n    /**\n     * @hidden\n     */\n    isSelected(date: ICalendarDate): boolean;\n    /**\n     * @hidden\n     */\n    isLastInRange(date: ICalendarDate): boolean;\n    /**\n     * @hidden\n     */\n    isFirstInRange(date: ICalendarDate): boolean;\n    /**\n     * @hidden\n     */\n    isWithinRange(date: Date, checkForRange: boolean, min?: Date, max?: Date): boolean;\n    /**\n     * @hidden\n     */\n    focusActiveDate(): void;\n    /**\n     * @hidden\n     */\n    selectDay(event: any): void;\n    /**\n     * @hidden\n     */\n    getFirstMonthView(): IgxDaysViewComponent;\n    /**\n     * @hidden\n     */\n    private disableOutOfRangeDates;\n    /**\n     * @hidden\n     */\n    private getLastMonthView;\n    /**\n     * @hidden\n     */\n    private get isSingleSelection();\n}\n"]}