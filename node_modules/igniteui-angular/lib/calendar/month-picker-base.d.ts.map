{"version":3,"file":"month-picker-base.d.ts","sources":["month-picker-base.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IgxCalendarBaseDirective } from './calendar-base';\nimport { ElementRef, QueryList } from '@angular/core';\nexport declare const IgxCalendarView: {\n    Month: \"month\";\n    Year: \"year\";\n    Decade: \"decade\";\n};\n/**\n * @hidden\n */\nexport declare enum CalendarView {\n    DEFAULT = 0,\n    YEAR = 1,\n    DECADE = 2\n}\n/**\n * Determines the Calendar active view - days, months or years.\n */\nexport declare type IgxCalendarView = (typeof IgxCalendarView)[keyof typeof IgxCalendarView] | CalendarView;\nexport declare class IgxMonthPickerBaseDirective extends IgxCalendarBaseDirective {\n    /**\n     * @hidden\n     */\n    yearsBtns: QueryList<ElementRef>;\n    /**\n     * @hidden @internal\n     */\n    previousViewDate: Date;\n    /**\n     * Holds month view index we are operating on.\n     */\n    protected activeViewIdx: number;\n    /**\n     * @hidden\n     */\n    private _activeView;\n    /**\n     * Gets the current active view.\n     * ```typescript\n     * this.activeView = calendar.activeView;\n     * ```\n     */\n    get activeView(): IgxCalendarView;\n    /**\n     * Sets the current active view.\n     * ```html\n     * <igx-calendar [activeView]=\"year\" #calendar></igx-calendar>\n     * ```\n     * ```typescript\n     * calendar.activeView = IgxCalendarView.YEAR;\n     * ```\n     */\n    set activeView(val: IgxCalendarView);\n    /**\n     * @hidden\n     */\n    get isDefaultView(): boolean;\n    /**\n     * @hidden\n     */\n    get isDecadeView(): boolean;\n    /**\n     * @hidden\n     */\n    changeYear(event: Date): void;\n    /**\n     * @hidden\n     */\n    activeViewDecade(activeViewIdx?: number): void;\n    /**\n     * @hidden\n     */\n    activeViewDecadeKB(event: any, activeViewIdx?: number): void;\n    /**\n     * Returns the locale representation of the year in the year view if enabled,\n     * otherwise returns the default `Date.getFullYear()` value.\n     *\n     * @hidden\n     */\n    formattedYear(value: Date): string;\n}\n"]}