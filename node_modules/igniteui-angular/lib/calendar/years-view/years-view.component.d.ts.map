{"version":3,"file":"years-view.component.d.ts","sources":["years-view.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, ElementRef, QueryList } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport { IgxCalendarYearDirective } from '../calendar.directives';\nexport declare class CalendarHammerConfig extends HammerGestureConfig {\n    overrides: {\n        pan: {\n            direction: 24;\n            threshold: number;\n        };\n    };\n}\nexport declare class IgxYearsViewComponent implements ControlValueAccessor {\n    el: ElementRef;\n    /**\n     * Gets/sets whether the view should be rendered\n     * according to the locale and yearFormat, if any.\n     */\n    formatView: boolean;\n    /**\n     * Emits an event when a selection is made in the years view.\n     * Provides reference the `date` property in the `IgxYearsViewComponent`.\n     * ```html\n     * <igx-years-view (selected)=\"onSelection($event)\"></igx-years-view>\n     * ```\n     *\n     * @memberof IgxYearsViewComponent\n     */\n    selected: EventEmitter<Date>;\n    /**\n     * The default css class applied to the component.\n     *\n     * @hidden\n     */\n    styleClass: boolean;\n    /**\n     * @hidden\n     * @internal\n     */\n    calendarDir: QueryList<IgxCalendarYearDirective>;\n    /**\n     * @hidden\n     */\n    private _formatterYear;\n    /**\n     * @hidden\n     */\n    private _locale;\n    /**\n     * @hidden\n     */\n    private _yearFormat;\n    /**\n     * @hidden\n     */\n    private _calendarModel;\n    /**\n     * @hidden\n     */\n    private _date;\n    /**\n     * @hidden\n     */\n    private _onTouchedCallback;\n    /**\n     * @hidden\n     */\n    private _onChangeCallback;\n    /**\n     * Gets/sets the selected date of the years view.\n     * By default it is the current date.\n     * ```html\n     * <igx-years-view [date]=\"myDate\"></igx-years-view>\n     * ```\n     * ```typescript\n     * let date =  this.yearsView.date;\n     * ```\n     *\n     * @memberof IgxYearsViewComponent\n     */\n    get date(): Date;\n    set date(value: Date);\n    /**\n     * Gets the year format option of the years view.\n     * ```typescript\n     * let yearFormat = this.yearsView.yearFormat.\n     * ```\n     */\n    get yearFormat(): string;\n    /**\n     * Sets the year format option of the years view.\n     * ```html\n     * <igx-years-view [yearFormat]=\"numeric\"></igx-years-view>\n     * ```\n     *\n     * @memberof IgxYearsViewComponent\n     */\n    set yearFormat(value: string);\n    /**\n     * Gets the `locale` of the years view.\n     * Default value is `\"en\"`.\n     * ```typescript\n     * let locale =  this.yearsView.locale;\n     * ```\n     *\n     * @memberof IgxYearsViewComponent\n     */\n    get locale(): string;\n    /**\n     * Sets the `locale` of the years view.\n     * Expects a valid BCP 47 language tag.\n     * Default value is `\"en\"`.\n     * ```html\n     * <igx-years-view [locale]=\"de\"></igx-years-view>\n     * ```\n     *\n     * @memberof IgxYearsViewComponent\n     */\n    set locale(value: string);\n    /**\n     * Returns an array of date objects which are then used to properly\n     * render the years.\n     *\n     * Used in the template of the component.\n     *\n     * @hidden\n     */\n    get decade(): number[];\n    constructor(el: ElementRef);\n    /**\n     * @hidden\n     */\n    onKeydownArrowDown(event: KeyboardEvent): void;\n    /**\n     * @hidden\n     */\n    onKeydownArrowUp(event: KeyboardEvent): void;\n    /**\n     * @hidden\n     */\n    onKeydownEnter(): void;\n    /**\n     * Returns the locale representation of the year in the years view.\n     *\n     * @hidden\n     */\n    formattedYear(value: Date): string;\n    /**\n     * @hidden\n     */\n    selectYear(event: any): void;\n    /**\n     * @hidden\n     */\n    scroll(event: any): void;\n    /**\n     * @hidden\n     */\n    pan(event: any): void;\n    /**\n     * @hidden\n     */\n    registerOnChange(fn: (v: Date) => void): void;\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn: () => void): void;\n    /**\n     * @hidden\n     */\n    yearTracker(index: any, item: any): string;\n    /**\n     * @hidden\n     */\n    writeValue(value: Date): void;\n    /**\n     * @hidden\n     */\n    private initYearFormatter;\n    /**\n     * @hidden\n     */\n    private generateYearRange;\n}\n"]}