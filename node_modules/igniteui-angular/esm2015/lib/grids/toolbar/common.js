import { Directive, HostBinding, TemplateRef } from '@angular/core';
// eslint-disable-next-line @angular-eslint/directive-selector
export class IgxExcelTextDirective {
}
IgxExcelTextDirective.decorators = [
    { type: Directive, args: [{ selector: '[excelText],excel-text' },] }
];
// eslint-disable-next-line @angular-eslint/directive-selector
export class IgxCSVTextDirective {
}
IgxCSVTextDirective.decorators = [
    { type: Directive, args: [{ selector: '[csvText],csv-text' },] }
];
/**
 * Provides a way to template the title portion of the toolbar in the grid.
 *
 * @igxModule IgxGridToolbarModule
 * @igxParent IgxGridToolbarComponent
 *
 * @example
 * ```html
 * <igx-grid-toolbar-title>My custom title</igx-grid-toolbar-title>
 * ```
 */
export class IgxGridToolbarTitleDirective {
    constructor() {
        /**
         * Host `class.igx-grid-toolbar__title` binding.
         *
         * @hidden
         * @internal
         */
        this.cssClass = 'igx-grid-toolbar__title';
    }
}
IgxGridToolbarTitleDirective.decorators = [
    { type: Directive, args: [{ selector: '[igxGridToolbarTitle],igx-grid-toolbar-title' },] }
];
IgxGridToolbarTitleDirective.propDecorators = {
    cssClass: [{ type: HostBinding, args: ['class.igx-grid-toolbar__title',] }]
};
/**
 * Provides a way to template the action portion of the toolbar in the grid.
 *
 * @igxModule IgxGridToolbarModule
 * @igxParent IgxGridToolbarComponent
 *
 * @example
 * ```html
 * <igx-grid-toolbar-actions>
 *  <some-toolbar-action-here />
 * </igx-grid-toolbar-actions>
 * ```
 */
export class IgxGridToolbarActionsDirective {
    constructor() {
        /**
         * Host `class.igx-grid-toolbar__actions` binding.
         *
         * @hidden
         * @internal
         */
        this.cssClass = 'igx-grid-toolbar__actions';
    }
}
IgxGridToolbarActionsDirective.decorators = [
    { type: Directive, args: [{ selector: '[igxGridToolbarActions],igx-grid-toolbar-actions' },] }
];
IgxGridToolbarActionsDirective.propDecorators = {
    cssClass: [{ type: HostBinding, args: ['class.igx-grid-toolbar__actions',] }]
};
export class IgxGridToolbarDirective {
    constructor(template) {
        this.template = template;
    }
}
IgxGridToolbarDirective.decorators = [
    { type: Directive, args: [{ selector: '[igxGridToolbar]' },] }
];
IgxGridToolbarDirective.ctorParameters = () => [
    { type: TemplateRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvbGliL2dyaWRzL3Rvb2xiYXIvY29tbW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUlwRSw4REFBOEQ7QUFFOUQsTUFBTSxPQUFPLHFCQUFxQjs7O1lBRGpDLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSx3QkFBd0IsRUFBRTs7QUFJakQsOERBQThEO0FBRTlELE1BQU0sT0FBTyxtQkFBbUI7OztZQUQvQixTQUFTLFNBQUMsRUFBRSxRQUFRLEVBQUUsb0JBQW9CLEVBQUU7O0FBRzdDOzs7Ozs7Ozs7O0dBVUc7QUFFSCxNQUFNLE9BQU8sNEJBQTRCO0lBRHpDO1FBRUk7Ozs7O1dBS0c7UUFFSSxhQUFRLEdBQUcseUJBQXlCLENBQUM7SUFDaEQsQ0FBQzs7O1lBVkEsU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLDhDQUE4QyxFQUFFOzs7dUJBUWxFLFdBQVcsU0FBQywrQkFBK0I7O0FBSWhEOzs7Ozs7Ozs7Ozs7R0FZRztBQUVILE1BQU0sT0FBTyw4QkFBOEI7SUFEM0M7UUFFSTs7Ozs7V0FLRztRQUVJLGFBQVEsR0FBRywyQkFBMkIsQ0FBQztJQUNqRCxDQUFDOzs7WUFWRCxTQUFTLFNBQUMsRUFBRSxRQUFRLEVBQUUsa0RBQWtELEVBQUU7Ozt1QkFRdEUsV0FBVyxTQUFDLGlDQUFpQzs7QUFTbEQsTUFBTSxPQUFPLHVCQUF1QjtJQUNoQyxZQUFtQixRQUFvRDtRQUFwRCxhQUFRLEdBQVIsUUFBUSxDQUE0QztJQUFHLENBQUM7OztZQUY5RSxTQUFTLFNBQUMsRUFBRSxRQUFRLEVBQUUsa0JBQWtCLEVBQUM7OztZQWpFVCxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0QmluZGluZywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneEhpZXJhcmNoaWNhbEdyaWRDb21wb25lbnQgfSBmcm9tICcuLi9oaWVyYXJjaGljYWwtZ3JpZC9oaWVyYXJjaGljYWwtZ3JpZC5jb21wb25lbnQnO1xuXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvZGlyZWN0aXZlLXNlbGVjdG9yXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbZXhjZWxUZXh0XSxleGNlbC10ZXh0JyB9KVxuZXhwb3J0IGNsYXNzIElneEV4Y2VsVGV4dERpcmVjdGl2ZSB7IH1cblxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L2RpcmVjdGl2ZS1zZWxlY3RvclxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW2NzdlRleHRdLGNzdi10ZXh0JyB9KVxuZXhwb3J0IGNsYXNzIElneENTVlRleHREaXJlY3RpdmUgeyB9XG5cbi8qKlxuICogUHJvdmlkZXMgYSB3YXkgdG8gdGVtcGxhdGUgdGhlIHRpdGxlIHBvcnRpb24gb2YgdGhlIHRvb2xiYXIgaW4gdGhlIGdyaWQuXG4gKlxuICogQGlneE1vZHVsZSBJZ3hHcmlkVG9vbGJhck1vZHVsZVxuICogQGlneFBhcmVudCBJZ3hHcmlkVG9vbGJhckNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sXG4gKiA8aWd4LWdyaWQtdG9vbGJhci10aXRsZT5NeSBjdXN0b20gdGl0bGU8L2lneC1ncmlkLXRvb2xiYXItdGl0bGU+XG4gKiBgYGBcbiAqL1xuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW2lneEdyaWRUb29sYmFyVGl0bGVdLGlneC1ncmlkLXRvb2xiYXItdGl0bGUnIH0pXG5leHBvcnQgY2xhc3MgSWd4R3JpZFRvb2xiYXJUaXRsZURpcmVjdGl2ZSB7XG4gICAgLyoqXG4gICAgICogSG9zdCBgY2xhc3MuaWd4LWdyaWQtdG9vbGJhcl9fdGl0bGVgIGJpbmRpbmcuXG4gICAgICpcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtZ3JpZC10b29sYmFyX190aXRsZScpXG4gICAgcHVibGljIGNzc0NsYXNzID0gJ2lneC1ncmlkLXRvb2xiYXJfX3RpdGxlJztcbn1cblxuLyoqXG4gKiBQcm92aWRlcyBhIHdheSB0byB0ZW1wbGF0ZSB0aGUgYWN0aW9uIHBvcnRpb24gb2YgdGhlIHRvb2xiYXIgaW4gdGhlIGdyaWQuXG4gKlxuICogQGlneE1vZHVsZSBJZ3hHcmlkVG9vbGJhck1vZHVsZVxuICogQGlneFBhcmVudCBJZ3hHcmlkVG9vbGJhckNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sXG4gKiA8aWd4LWdyaWQtdG9vbGJhci1hY3Rpb25zPlxuICogIDxzb21lLXRvb2xiYXItYWN0aW9uLWhlcmUgLz5cbiAqIDwvaWd4LWdyaWQtdG9vbGJhci1hY3Rpb25zPlxuICogYGBgXG4gKi9cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1tpZ3hHcmlkVG9vbGJhckFjdGlvbnNdLGlneC1ncmlkLXRvb2xiYXItYWN0aW9ucycgfSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkVG9vbGJhckFjdGlvbnNEaXJlY3RpdmUge1xuICAgIC8qKlxuICAgICAqIEhvc3QgYGNsYXNzLmlneC1ncmlkLXRvb2xiYXJfX2FjdGlvbnNgIGJpbmRpbmcuXG4gICAgICpcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtZ3JpZC10b29sYmFyX19hY3Rpb25zJylcbiAgICBwdWJsaWMgY3NzQ2xhc3MgPSAnaWd4LWdyaWQtdG9vbGJhcl9fYWN0aW9ucyc7XG4gfVxuXG5leHBvcnQgaW50ZXJmYWNlIElneEdyaWRUb29sYmFyVGVtcGxhdGVDb250ZXh0IHtcbiAgICAkaW1wbGljaXQ6IElneEhpZXJhcmNoaWNhbEdyaWRDb21wb25lbnQ7XG59XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1tpZ3hHcmlkVG9vbGJhcl0nfSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkVG9vbGJhckRpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxJZ3hHcmlkVG9vbGJhclRlbXBsYXRlQ29udGV4dD4pIHt9XG59XG4iXX0=