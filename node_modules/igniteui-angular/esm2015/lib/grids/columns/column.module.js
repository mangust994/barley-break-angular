import { NgModule } from '@angular/core';
import { IgxColumnComponent } from './column.component';
import { IgxColumnGroupComponent } from './column-group.component';
import { IgxColumnLayoutComponent } from './column-layout.component';
import { IgxCellEditorTemplateDirective, IgxCellFooterTemplateDirective, IgxCellHeaderTemplateDirective, IgxCellTemplateDirective, IgxCollapsibleIndicatorTemplateDirective, IgxFilterCellTemplateDirective } from './templates.directive';
export class IgxGridColumnModule {
}
IgxGridColumnModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    IgxFilterCellTemplateDirective,
                    IgxCellTemplateDirective,
                    IgxCellHeaderTemplateDirective,
                    IgxCellFooterTemplateDirective,
                    IgxCellEditorTemplateDirective,
                    IgxCollapsibleIndicatorTemplateDirective,
                    IgxColumnComponent,
                    IgxColumnGroupComponent,
                    IgxColumnLayoutComponent
                ],
                entryComponents: [
                    IgxColumnComponent,
                    IgxColumnGroupComponent,
                    IgxColumnLayoutComponent
                ],
                exports: [
                    IgxFilterCellTemplateDirective,
                    IgxCellTemplateDirective,
                    IgxCellHeaderTemplateDirective,
                    IgxCellFooterTemplateDirective,
                    IgxCellEditorTemplateDirective,
                    IgxCollapsibleIndicatorTemplateDirective,
                    IgxColumnComponent,
                    IgxColumnGroupComponent,
                    IgxColumnLayoutComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9ncmlkcy9jb2x1bW5zL2NvbHVtbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNyRSxPQUFPLEVBQ0gsOEJBQThCLEVBQzlCLDhCQUE4QixFQUM5Qiw4QkFBOEIsRUFDOUIsd0JBQXdCLEVBQ3hCLHdDQUF3QyxFQUN4Qyw4QkFBOEIsRUFDakMsTUFBTSx1QkFBdUIsQ0FBQztBQWdDL0IsTUFBTSxPQUFPLG1CQUFtQjs7O1lBN0IvQixRQUFRLFNBQUM7Z0JBQ04sWUFBWSxFQUFFO29CQUNWLDhCQUE4QjtvQkFDOUIsd0JBQXdCO29CQUN4Qiw4QkFBOEI7b0JBQzlCLDhCQUE4QjtvQkFDOUIsOEJBQThCO29CQUM5Qix3Q0FBd0M7b0JBQ3hDLGtCQUFrQjtvQkFDbEIsdUJBQXVCO29CQUN2Qix3QkFBd0I7aUJBQzNCO2dCQUNELGVBQWUsRUFBRTtvQkFDYixrQkFBa0I7b0JBQ2xCLHVCQUF1QjtvQkFDdkIsd0JBQXdCO2lCQUMzQjtnQkFDRCxPQUFPLEVBQUU7b0JBQ0wsOEJBQThCO29CQUM5Qix3QkFBd0I7b0JBQ3hCLDhCQUE4QjtvQkFDOUIsOEJBQThCO29CQUM5Qiw4QkFBOEI7b0JBQzlCLHdDQUF3QztvQkFDeEMsa0JBQWtCO29CQUNsQix1QkFBdUI7b0JBQ3ZCLHdCQUF3QjtpQkFDM0I7YUFDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hDb2x1bW5Db21wb25lbnQgfSBmcm9tICcuL2NvbHVtbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4Q29sdW1uR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbi1ncm91cC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4Q29sdW1uTGF5b3V0Q29tcG9uZW50IH0gZnJvbSAnLi9jb2x1bW4tbGF5b3V0LmNvbXBvbmVudCc7XG5pbXBvcnQge1xuICAgIElneENlbGxFZGl0b3JUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hDZWxsRm9vdGVyVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4Q2VsbEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneENlbGxUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hDb2xsYXBzaWJsZUluZGljYXRvclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneEZpbHRlckNlbGxUZW1wbGF0ZURpcmVjdGl2ZVxufSBmcm9tICcuL3RlbXBsYXRlcy5kaXJlY3RpdmUnO1xuXG5cbkBOZ01vZHVsZSh7XG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIElneEZpbHRlckNlbGxUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q2VsbFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDZWxsSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENlbGxGb290ZXJUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q2VsbEVkaXRvclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDb2xsYXBzaWJsZUluZGljYXRvclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDb2x1bW5Db21wb25lbnQsXG4gICAgICAgIElneENvbHVtbkdyb3VwQ29tcG9uZW50LFxuICAgICAgICBJZ3hDb2x1bW5MYXlvdXRDb21wb25lbnRcbiAgICBdLFxuICAgIGVudHJ5Q29tcG9uZW50czogW1xuICAgICAgICBJZ3hDb2x1bW5Db21wb25lbnQsXG4gICAgICAgIElneENvbHVtbkdyb3VwQ29tcG9uZW50LFxuICAgICAgICBJZ3hDb2x1bW5MYXlvdXRDb21wb25lbnRcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgSWd4RmlsdGVyQ2VsbFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDZWxsVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENlbGxIZWFkZXJUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q2VsbEZvb3RlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDZWxsRWRpdG9yVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENvbGxhcHNpYmxlSW5kaWNhdG9yVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENvbHVtbkNvbXBvbmVudCxcbiAgICAgICAgSWd4Q29sdW1uR3JvdXBDb21wb25lbnQsXG4gICAgICAgIElneENvbHVtbkxheW91dENvbXBvbmVudFxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgSWd4R3JpZENvbHVtbk1vZHVsZSB7fVxuIl19