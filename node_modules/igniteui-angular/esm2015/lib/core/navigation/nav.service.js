import { Injectable } from '@angular/core';
/**
 * Common service to be injected between components where those implementing common
 * ToggleView interface can register and toggle directives can call their methods.
 * TODO: Track currently active? Events?
 */
export class IgxNavigationService {
    constructor() {
        this.navs = {};
    }
    add(id, navItem) {
        this.navs[id] = navItem;
    }
    remove(id) {
        delete this.navs[id];
    }
    get(id) {
        if (id) {
            return this.navs[id];
        }
    }
    toggle(id, ...args) {
        if (this.navs[id]) {
            return this.navs[id].toggle(...args);
        }
    }
    open(id, ...args) {
        if (this.navs[id]) {
            return this.navs[id].open(...args);
        }
    }
    close(id, ...args) {
        if (this.navs[id]) {
            return this.navs[id].close(...args);
        }
    }
}
IgxNavigationService.decorators = [
    { type: Injectable }
];
IgxNavigationService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvY29yZS9uYXZpZ2F0aW9uL25hdi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0M7Ozs7R0FJRztBQUVILE1BQU0sT0FBTyxvQkFBb0I7SUFHN0I7UUFDSSxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRU0sR0FBRyxDQUFDLEVBQVUsRUFBRSxPQUFvQjtRQUN2QyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQztJQUM1QixDQUFDO0lBRU0sTUFBTSxDQUFDLEVBQVU7UUFDcEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFTSxHQUFHLENBQUMsRUFBVTtRQUNqQixJQUFJLEVBQUUsRUFBRTtZQUNKLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUN4QjtJQUNMLENBQUM7SUFFTSxNQUFNLENBQUMsRUFBVSxFQUFFLEdBQUcsSUFBSTtRQUM3QixJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFDZixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7U0FDeEM7SUFDTCxDQUFDO0lBQ00sSUFBSSxDQUFDLEVBQVUsRUFBRSxHQUFHLElBQUk7UUFDM0IsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQ2YsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1NBQ3RDO0lBQ0wsQ0FBQztJQUNNLEtBQUssQ0FBQyxFQUFVLEVBQUUsR0FBRyxJQUFJO1FBQzVCLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRTtZQUNmLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztTQUN2QztJQUNMLENBQUM7OztZQXBDSixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSVRvZ2dsZVZpZXcgfSBmcm9tICcuL0lUb2dnbGVWaWV3JztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBDb21tb24gc2VydmljZSB0byBiZSBpbmplY3RlZCBiZXR3ZWVuIGNvbXBvbmVudHMgd2hlcmUgdGhvc2UgaW1wbGVtZW50aW5nIGNvbW1vblxuICogVG9nZ2xlVmlldyBpbnRlcmZhY2UgY2FuIHJlZ2lzdGVyIGFuZCB0b2dnbGUgZGlyZWN0aXZlcyBjYW4gY2FsbCB0aGVpciBtZXRob2RzLlxuICogVE9ETzogVHJhY2sgY3VycmVudGx5IGFjdGl2ZT8gRXZlbnRzP1xuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSWd4TmF2aWdhdGlvblNlcnZpY2Uge1xuICAgIHByaXZhdGUgbmF2czogeyBbaWQ6IHN0cmluZ106IElUb2dnbGVWaWV3IH07XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5uYXZzID0ge307XG4gICAgfVxuXG4gICAgcHVibGljIGFkZChpZDogc3RyaW5nLCBuYXZJdGVtOiBJVG9nZ2xlVmlldykge1xuICAgICAgICB0aGlzLm5hdnNbaWRdID0gbmF2SXRlbTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVtb3ZlKGlkOiBzdHJpbmcpIHtcbiAgICAgICAgZGVsZXRlIHRoaXMubmF2c1tpZF07XG4gICAgfVxuXG4gICAgcHVibGljIGdldChpZDogc3RyaW5nKTogSVRvZ2dsZVZpZXcge1xuICAgICAgICBpZiAoaWQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5hdnNbaWRdO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHRvZ2dsZShpZDogc3RyaW5nLCAuLi5hcmdzKSB7XG4gICAgICAgIGlmICh0aGlzLm5hdnNbaWRdKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5uYXZzW2lkXS50b2dnbGUoLi4uYXJncyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcHVibGljIG9wZW4oaWQ6IHN0cmluZywgLi4uYXJncykge1xuICAgICAgICBpZiAodGhpcy5uYXZzW2lkXSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubmF2c1tpZF0ub3BlbiguLi5hcmdzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwdWJsaWMgY2xvc2UoaWQ6IHN0cmluZywgLi4uYXJncykge1xuICAgICAgICBpZiAodGhpcy5uYXZzW2lkXSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubmF2c1tpZF0uY2xvc2UoLi4uYXJncyk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=